{"version":3,"file":"static/js/509.e1865449.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/ProgressBar.js","constants/index.js","components/HotelDetails.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport './ProgressBar.css';\r\n\r\nconst ProgressBar = () => {\r\n    return (\r\n        <div className=\"progress\">\r\n            <div className=\"color\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;","const locationOptions = [\r\n    {label: \"new-york\", value: \"new-york\"},\r\n    {label: \"orlando\", value: \"orlando\"}, \r\n    {label: \"barbados\", value: \"barbados\"}, \r\n    {label: \"toronto\", value: \"toronto\"},\r\n];\r\n\r\nconst boardingOptions = [{label: \"hotel\", value: \"hotel\"},];\r\n\r\nconst adultsOptions = [\r\n    {label: \"1\", value: \"1\"}, \r\n    {label: \"2\", value: \"2\"}, \r\n    {label: \"3\", value: \"3\"},\r\n];\r\n\r\nconst infantsOptions = [\r\n    {label: \"0\", value: \"0\"}, \r\n    {label: \"1\", value: \"1\"}, \r\n    {label: \"2\", value: \"2\"},\r\n];\r\n\r\nconst ratings = [\r\n    {label: \"1 star\", value: \"1\", isChecked: false, name:\"star1\"},\r\n    {label: \"2 stars\", value: \"2\", isChecked: false, name:\"star2\"}, \r\n    {label: \"3 stars\", value: \"3\", isChecked: false, name:\"star3\"}, \r\n    {label: \"4 stars\", value: \"4\", isChecked: false, name:\"star4\"},\r\n    {label: \"5 stars\", value: \"5\", isChecked: false, name:\"star5\"},\r\n];\r\n\r\nconst pricePerPerson = [\r\n    {label: \"Less than $500\", value: \"1\", isChecked: false, name:\"price1\", min:0, max:500},\r\n    {label: \"$500 to $1000\", value: \"2\", isChecked: false, name:\"price2\", min:500, max:1000}, \r\n    {label: \"$1000 to $1500\", value: \"3\", isChecked: false, name:\"price3\", min:1000, max:1500}, \r\n    {label: \"Greater than $1500\", value: \"4\", isChecked: false, name:\"price4\", min:1500, max: 100000},\r\n];\r\n\r\nconst facilities = [\r\n    {label: \"Bar\", value: \"1\", isChecked: false, name:\"facility1\"},\r\n    {label: \"Restaurant\", value: \"2\", isChecked: false, name:\"facility2\"}, \r\n    {label: \"Free parking\", value: \"3\", isChecked: false, name:\"facility3\"}, \r\n    {label: \"Swimming pool\", value: \"4\", isChecked: false, name:\"facility4\"},\r\n    {label: \"Safety Deposit Box\", value: \"5\", isChecked: false, name:\"facility5\"},\r\n    {label: \"Fitness Centre/Gym\", value: \"6\", isChecked: false, name:\"facility6\"},\r\n    {label: \"Laundry Service\", value: \"7\", isChecked: false, name:\"facility7\"}, \r\n    {label: \"Games Room\", value: \"8\", isChecked: false, name:\"facility8\"}, \r\n    {label: \"Internet Access\", value: \"9\", isChecked: false, name:\"facility9\"},\r\n    {label: \"Whirlpool\", value: \"10\", isChecked: false, name:\"facility10\"},\r\n];\r\n\r\nexport {locationOptions, boardingOptions, adultsOptions, infantsOptions, ratings, pricePerPerson, facilities};","import React, {useState, useEffect} from 'react';\r\nimport './HotelDetails.css';\r\nimport ProgressBar from './ProgressBar';\r\nimport {ratings, pricePerPerson, facilities} from \"../constants\";\r\n\r\nfunction HotelDetails({hotels}){\r\n\r\n    const [selectedStars, setSelectedStars] = useState([]);\r\n    const [selectedPricePerPerson, setSelectedPricePerPerson] = useState([]);\r\n    const [selectedFacilities, setSelectedFacilities] = useState([]);\r\n\r\n\r\n    const checkUnCheck = (prevSelections, currentSelection) => {\r\n        if(prevSelections.includes(currentSelection)) {\r\n            return prevSelections.filter(selection => selection !== currentSelection)\r\n        } else {\r\n            return [...prevSelections, currentSelection]\r\n        }\r\n    };\r\n    \r\n    const filterBy = (data, {type, value}) => {\r\n        if(!value.length) return data;\r\n        const filtered =  data.filter((item) => {\r\n            if(type === \"starRating\"){\r\n                return value.includes(item.hotel.content.starRating);\r\n            }\r\n            if(type === \"pricePerPerson\"){\r\n                const minMaxes = value.map(v => v.split('-'));\r\n                return minMaxes.find(([min, max]) => item.pricePerPerson > min && item.pricePerPerson < max)\r\n            }\r\n            if(type === \"hotelFacilities\"){\r\n                const availableFacilities =  item.hotel.content.hotelFacilities.filter((facility) => value.includes(facility));\r\n                return availableFacilities.length ===  value.length\r\n            }\r\n        })\r\n        return filtered;\r\n    };\r\n\r\n    const [filteredHotelDetails, setFilteredHotelDetails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const filterByStar = filterBy(hotels, {type: 'starRating', value: selectedStars});\r\n        const filterByStarPrice = filterBy(filterByStar, {type: 'pricePerPerson', value: selectedPricePerPerson});\r\n        const filterByStarPriceFacility = filterBy(filterByStarPrice, {type: 'hotelFacilities', value: selectedFacilities});\r\n        setFilteredHotelDetails([...filterByStarPriceFacility]);\r\n    }, [selectedStars, selectedPricePerPerson, selectedFacilities]);\r\n\r\n    return(\r\n        <section id=\"page\">\r\n            <span className=\"filter-container\">\r\n                <div className=\"filter-container-bg\">\r\n                    <h2 className=\"filter-header\">Filter by:</h2>\r\n                    <div>\r\n                        <h4 className=\"ratings-header\">Star rating</h4>\r\n                        {ratings.map((option) => (\r\n                        <label className=\"container\" key={`star${option.value}`}>{option.label}\r\n                            <input\r\n                                type=\"checkbox\" \r\n                                id={option.value}\r\n                                checked={selectedStars.includes(option.value)} \r\n                                onChange={(e) => {setSelectedStars(prev => checkUnCheck(prev, e.target.id))}}\r\n                            />\r\n                        <span className=\"checkmark\"></span>\r\n                        </label>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div>\r\n                    <h4>Price per person</h4>\r\n                    {pricePerPerson.map((option) => (\r\n                        <label className=\"container\" key={`price${option.value}`}>{option.label}\r\n                            <input\r\n                                type=\"checkbox\" \r\n                                id={`${option.min}-${option.max}`}\r\n                                checked={selectedPricePerPerson.includes(`${option.min}-${option.max}`)}\r\n                                onChange={(e) => {setSelectedPricePerPerson(prev => checkUnCheck(prev, e.target.id))}}\r\n                            />\r\n                        <span className=\"checkmark\"></span>\r\n                        </label>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div>\r\n                    <h4>Hotel facilities</h4>\r\n                    {facilities.map((option) => (\r\n                        <label className=\"container\" key={`facility${option.value}`}>{option.label}\r\n                            <input\r\n                                type=\"checkbox\" \r\n                                id={option.label}\r\n                                checked={selectedFacilities.includes(option.label)}\r\n                                onChange={(e) => {setSelectedFacilities(prev => checkUnCheck(prev, e.target.id))}}\r\n                            />\r\n                        <span className=\"checkmark\"></span>\r\n                        </label>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </span>\r\n            <main>\r\n\t\t\t{filteredHotelDetails.length > 0 ? \r\n\t\t\t\t(<div> {filteredHotelDetails.map((hotelData, id) => (\r\n                    <div id=\"hotel-details-card\" key={id}>\r\n                        <div>\r\n                            {hotelData ? \r\n                            <div className=\"hotel-image\">\r\n                            {hotelData && hotelData.hotel && \r\n                                hotelData.hotel.content && hotelData.hotel.content.images[0] &&\r\n                                    hotelData.hotel.content.images[0].RESULTS_CAROUSEL &&\r\n                                <img src={hotelData.hotel.content.images[0].RESULTS_CAROUSEL.url} \r\n                                    alt=\"hotel\" width=\"285\" height=\"260\"/>}\r\n                            </div> :\r\n                            <div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"hotel-name\">{hotelData && hotelData.hotel && hotelData.hotel.name}</div>\r\n                            <div className=\"hotel-descprition\">{hotelData.hotel.content.hotelDescription}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                            {hotelData && hotelData.hotel && hotelData.hotel.tripAdvisor &&\r\n                            <img src={hotelData.hotel.tripAdvisor.ratingImageUrl} alt=\"ratings\"/>}\r\n                            </div>\r\n                            <div>{hotelData && hotelData.hotel && hotelData.hotel.tripAdvisor &&\r\n                                    hotelData.hotel.tripAdvisor.numReviews} reviews</div>\r\n                            <div>{`${hotelData.hotel.content.vRating} star ratings`}</div>\r\n                            <div className=\"price-per-person\">Price/Person: $ {hotelData.pricePerPerson}</div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </div>):(\r\n\t\t\t\t\t<div className=\"hotel-not-found\">No hotels found!</div>\r\n\t\t\t\t)}\r\n                </main>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default HotelDetails;"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","className","ratings","label","value","isChecked","name","pricePerPerson","min","max","facilities","hotels","useState","selectedStars","setSelectedStars","selectedPricePerPerson","setSelectedPricePerPerson","selectedFacilities","setSelectedFacilities","checkUnCheck","prevSelections","currentSelection","includes","filter","selection","filterBy","data","type","length","item","hotel","content","starRating","map","v","split","find","hotelFacilities","facility","filteredHotelDetails","setFilteredHotelDetails","useEffect","filterByStar","filterByStarPrice","filterByStarPriceFacility","id","option","checked","onChange","e","prev","target","hotelData","images","RESULTS_CAROUSEL","src","url","alt","width","height","hotelDescription","tripAdvisor","ratingImageUrl","numReviews","vRating"],"sourceRoot":""}